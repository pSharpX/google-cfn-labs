plugins {
	id 'java'
	id 'application'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.gradleup.shadow' version '8.3.5'
}

group = 'com.onebank.taskmaster.controlplane'
version = '0.0.1-SNAPSHOT'
def appName = "emailsender"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	invoker
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('feignVersion', "13.5")
	set('gcloudVersion', "26.52.0")
}

dependencies {
	implementation ('com.google.inject:guice:7.0.0') {
		exclude group: 'com.google.guava', module: 'guava'
	}
	implementation group: 'com.google.guava', name: 'guava', version: '33.3.1-jre'
	implementation 'com.google.cloud.functions:functions-framework-api:1.1.0'
	invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.3.0'
	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
	implementation 'org.slf4j:slf4j-api:2.0.9'
	runtimeOnly 'ch.qos.logback:logback-classic:1.4.12'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.glassfish.expressly:expressly:5.0.0'

	implementation 'com.hubspot.jackson:jackson-datatype-protobuf:0.9.17'

	implementation 'io.github.openfeign:feign-okhttp'
	implementation 'io.github.openfeign:feign-jackson'
	implementation 'io.github.openfeign:feign-slf4j'

	implementation 'com.google.cloud:google-cloudevent-types:0.16.0'
	implementation 'com.google.cloud:google-cloud-pubsub'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "io.github.openfeign:feign-bom:${feignVersion}"
		mavenBom "com.google.cloud:libraries-bom:${gcloudVersion}"
	}
}

application {
	mainClass = 'com.onebank.taskmaster.sendnotification.ControlPlaneApplication'
}

tasks.named('test') {
	useJUnitPlatform()
}

shadowJar {
	mergeServiceFiles()
}

tasks.register("runFunction", JavaExec) {
	main = 'com.google.cloud.functions.invoker.runner.Invoker'
	classpath(configurations.invoker)
	inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
	args(
			'--target', project.findProperty('run.functionTarget'),
			'--port', project.findProperty('run.port') ?: 8080
	)
	doFirst {
		args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
	}
}